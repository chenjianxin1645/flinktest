apiVersion: v1
data:
  key1: "################################################################################\n#
    \ Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor
    license agreements.  See the NOTICE file\n#  distributed with this work for additional
    information\n#  regarding copyright ownership.  The ASF licenses this file\n#
    \ to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may
    not use this file except in compliance\n#  with the License.  You may obtain a
    copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#
    \ Unless required by applicable law or agreed to in writing, software\n#  distributed
    under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES
    OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for
    the specific language governing permissions and\n# limitations under the License.\n################################################################################\n\n\n#==============================================================================\n#
    Common\n#==============================================================================\n\n#
    The external address of the host on which the JobManager runs and can be\n# reached
    by the TaskManagers and any clients which want to connect. This setting\n# is
    only used in Standalone mode and may be overwritten on the JobManager side\n#
    by specifying the --host <hostname> parameter of the bin/jobmanager.sh executable.\n#
    In high availability mode, if you use the bin/start-cluster.sh script and setup\n#
    the conf/masters file, this will be taken care of automatically. Yarn\n# automatically
    configure the host name based on the hostname of the node where the\n# JobManager
    runs.\n\njobmanager.rpc.address: localhost\n\n# The RPC port where the JobManager
    is reachable.\n\njobmanager.rpc.port: 6123\n\n# The host interface the JobManager
    will bind to. By default, this is localhost, and will prevent\n# the JobManager
    from communicating outside the machine/container it is running on.\n# On YARN
    this setting will be ignored if it is set to 'localhost', defaulting to 0.0.0.0.\n#
    On Kubernetes this setting will be ignored, defaulting to 0.0.0.0.\n#\n# To enable
    this, set the bind-host address to one that has access to an outside facing network\n#
    interface, such as 0.0.0.0.\n\njobmanager.bind-host: localhost\n\n\n# The total
    process memory size for the JobManager.\n#\n# Note this accounts for all memory
    usage within the JobManager process, including JVM metaspace and other overhead.\n\njobmanager.memory.process.size:
    1024m\n\n# The host interface the TaskManager will bind to. By default, this is
    localhost, and will prevent\n# the TaskManager from communicating outside the
    machine/container it is running on.\n# On YARN this setting will be ignored if
    it is set to 'localhost', defaulting to 0.0.0.0.\n# On Kubernetes this setting
    will be ignored, defaulting to 0.0.0.0.\n#\n# To enable this, set the bind-host
    address to one that has access to an outside facing network\n# interface, such
    as 0.0.0.0.\n\ntaskmanager.bind-host: localhost\n\n# The address of the host on
    which the TaskManager runs and can be reached by the JobManager and\n# other TaskManagers.
    If not specified, the TaskManager will try different strategies to identify\n#
    the address.\n#\n# Note this address needs to be reachable by the JobManager and
    forward traffic to one of\n# the interfaces the TaskManager is bound to (see 'taskmanager.bind-host').\n#\n#
    Note also that unless all TaskManagers are running on the same machine, this address
    needs to be\n# configured separately for each TaskManager.\n\ntaskmanager.host:
    localhost\n\n# The total process memory size for the TaskManager.\n#\n# Note this
    accounts for all memory usage within the TaskManager process, including JVM metaspace
    and other overhead.\n\ntaskmanager.memory.process.size: 1024m\n\n# To exclude
    JVM metaspace and overhead, please, use total Flink memory size instead of 'taskmanager.memory.process.size'.\n#
    It is not recommended to set both 'taskmanager.memory.process.size' and Flink
    memory.\n#\n# taskmanager.memory.flink.size: 1280m\n\n# The number of task slots
    that each TaskManager offers. Each slot runs one parallel pipeline.\n\ntaskmanager.numberOfTaskSlots:
    1\n\n# The parallelism used for programs that did not specify and other parallelism.\n\nparallelism.default:
    1\n\n# The default file system scheme and authority.\n# \n# By default file paths
    without scheme are interpreted relative to the local\n# root file system 'file:///'.
    Use this to override the default and interpret\n# relative paths relative to a
    different file system,\n# for example 'hdfs://mynamenode:12345'\n#\n# fs.default-scheme\n\n#==============================================================================\n#
    High Availability\n#==============================================================================\n\n#
    The high-availability mode. Possible options are 'NONE' or 'zookeeper'.\n#\n#
    high-availability: zookeeper\n\n# The path where metadata for master recovery
    is persisted. While ZooKeeper stores\n# the small ground truth for checkpoint
    and leader election, this location stores\n# the larger objects, like persisted
    dataflow graphs.\n# \n# Must be a durable file system that is accessible from
    all nodes\n# (like HDFS, S3, Ceph, nfs, ...) \n#\n# high-availability.storageDir:
    hdfs:///flink/ha/\n\n# The list of ZooKeeper quorum peers that coordinate the
    high-availability\n# setup. This must be a list of the form:\n# \"host1:clientPort,host2:clientPort,...\"
    (default clientPort: 2181)\n#\n# high-availability.zookeeper.quorum: localhost:2181\n\n\n#
    ACL options are based on https://zookeeper.apache.org/doc/r3.1.2/zookeeperProgrammers.html#sc_BuiltinACLSchemes\n#
    It can be either \"creator\" (ZOO_CREATE_ALL_ACL) or \"open\" (ZOO_OPEN_ACL_UNSAFE)\n#
    The default value is \"open\" and it can be changed to \"creator\" if ZK security
    is enabled\n#\n# high-availability.zookeeper.client.acl: open\n\n#==============================================================================\n#
    Fault tolerance and checkpointing\n#==============================================================================\n\n#
    The backend that will be used to store operator state checkpoints if\n# checkpointing
    is enabled. Checkpointing is enabled when execution.checkpointing.interval > 0.\n#\n#
    Execution checkpointing related parameters. Please refer to CheckpointConfig and
    ExecutionCheckpointingOptions for more details.\n#\n# execution.checkpointing.interval:
    3min\n# execution.checkpointing.externalized-checkpoint-retention: [DELETE_ON_CANCELLATION,
    RETAIN_ON_CANCELLATION]\n# execution.checkpointing.max-concurrent-checkpoints:
    1\n# execution.checkpointing.min-pause: 0\n# execution.checkpointing.mode: [EXACTLY_ONCE,
    AT_LEAST_ONCE]\n# execution.checkpointing.timeout: 10min\n# execution.checkpointing.tolerable-failed-checkpoints:
    0\n# execution.checkpointing.unaligned: false\n#\n# Supported backends are 'hashmap',
    'rocksdb', or the\n# <class-name-of-factory>.\n#\n# state.backend: hashmap\n\n#
    Directory for checkpoints filesystem, when using any of the default bundled\n#
    state backends.\n#\n# state.checkpoints.dir: hdfs://namenode-host:port/flink-checkpoints\n\n#
    Default target directory for savepoints, optional.\n#\n# state.savepoints.dir:
    hdfs://namenode-host:port/flink-savepoints\n\n# Flag to enable/disable incremental
    checkpoints for backends that\n# support incremental checkpoints (like the RocksDB
    state backend). \n#\n# state.backend.incremental: false\n\n# The failover strategy,
    i.e., how the job computation recovers from task failures.\n# Only restart tasks
    that may have been affected by the task failure, which typically includes\n# downstream
    tasks and potentially upstream tasks if their produced data is no longer available
    for consumption.\n\njobmanager.execution.failover-strategy: region\n\n#==============================================================================\n#
    Rest & web frontend\n#==============================================================================\n\n#
    The port to which the REST client connects to. If rest.bind-port has\n# not been
    specified, then the server will bind to this port as well.\n#\n#rest.port: 8081\n\n#
    The address to which the REST client will connect to\n#\nrest.address: localhost\n\n#
    Port range for the REST and web server to bind to.\n#\n#rest.bind-port: 8080-8090\n\n#
    The address that the REST & web server binds to\n# By default, this is localhost,
    which prevents the REST & web server from\n# being able to communicate outside
    of the machine/container it is running on.\n#\n# To enable this, set the bind
    address to one that has access to outside-facing\n# network interface, such as
    0.0.0.0.\n#\nrest.bind-address: localhost\n\n# Flag to specify whether job submission
    is enabled from the web-based\n# runtime monitor. Uncomment to disable.\n\n#web.submit.enable:
    false\n\n# Flag to specify whether job cancellation is enabled from the web-based\n#
    runtime monitor. Uncomment to disable.\n\n#web.cancel.enable: false\n\n#==============================================================================\n#
    Advanced\n#==============================================================================\n\n#
    Override the directories for temporary files. If not specified, the\n# system-specific
    Java temporary directory (java.io.tmpdir property) is taken.\n#\n# For framework
    setups on Yarn, Flink will automatically pick up the\n# containers' temp directories
    without any need for configuration.\n#\n# Add a delimited list for multiple directories,
    using the system directory\n# delimiter (colon ':' on unix) or a comma, e.g.:\n#
    \    /data1/tmp:/data2/tmp:/data3/tmp\n#\n# Note: Each directory entry is read
    from and written to by a different I/O\n# thread. You can include the same directory
    multiple times in order to create\n# multiple I/O threads against that directory.
    This is for example relevant for\n# high-throughput RAIDs.\n#\n# io.tmp.dirs:
    /tmp\n\n# The classloading resolve order. Possible values are 'child-first' (Flink's
    default)\n# and 'parent-first' (Java's default).\n#\n# Child first classloading
    allows users to use different dependency/library\n# versions in their application
    than those in the classpath. Switching back\n# to 'parent-first' may help with
    debugging dependency issues.\n#\n# classloader.resolve-order: child-first\n\n#
    The amount of memory going to the network stack. These numbers usually need \n#
    no tuning. Adjusting them may be necessary in case of an \"Insufficient number\n#
    of network buffers\" error. The default min is 64MB, the default max is 1GB.\n#
    \n# taskmanager.memory.network.fraction: 0.1\n# taskmanager.memory.network.min:
    64mb\n# taskmanager.memory.network.max: 1gb\n\n#==============================================================================\n#
    Flink Cluster Security Configuration\n#==============================================================================\n\n#
    Kerberos authentication for various components - Hadoop, ZooKeeper, and connectors
    -\n# may be enabled in four steps:\n# 1. configure the local krb5.conf file\n#
    2. provide Kerberos credentials (either a keytab or a ticket cache w/ kinit)\n#
    3. make the credentials available to various JAAS login contexts\n# 4. configure
    the connector to use JAAS/SASL\n\n# The below configure how Kerberos credentials
    are provided. A keytab will be used instead of\n# a ticket cache if the keytab
    path and principal are set.\n\n# security.kerberos.login.use-ticket-cache: true\n#
    security.kerberos.login.keytab: /path/to/kerberos/keytab\n# security.kerberos.login.principal:
    flink-user\n\n# The configuration below defines which JAAS login contexts\n\n#
    security.kerberos.login.contexts: Client,KafkaClient\n\n#==============================================================================\n#
    ZK Security Configuration\n#==============================================================================\n\n#
    Below configurations are applicable if ZK ensemble is configured for security\n\n#
    Override below configuration to provide custom ZK service name if configured\n#
    zookeeper.sasl.service-name: zookeeper\n\n# The configuration below must match
    one of the values set in \"security.kerberos.login.contexts\"\n# zookeeper.sasl.login-context-name:
    Client\n\n#==============================================================================\n#
    HistoryServer\n#==============================================================================\n\n#
    The HistoryServer is started and stopped via bin/historyserver.sh (start|stop)\n\n#
    Directory to upload completed jobs to. Add this directory to the list of\n# monitored
    directories of the HistoryServer as well (see below).\n#jobmanager.archive.fs.dir:
    hdfs:///completed-jobs/\n\n# The address under which the web-based HistoryServer
    listens.\n#historyserver.web.address: 0.0.0.0\n\n# The port under which the web-based
    HistoryServer listens.\n#historyserver.web.port: 8082\n\n# Comma separated list
    of directories to monitor for completed jobs.\n#historyserver.archive.fs.dir:
    hdfs:///completed-jobs/\n\n# Interval in milliseconds for refreshing the monitored
    directories.\n#historyserver.archive.fs.refresh-interval: 10000\n\n"
  key2: |
    ################################################################################
    #  Licensed to the Apache Software Foundation (ASF) under one
    #  or more contributor license agreements.  See the NOTICE file
    #  distributed with this work for additional information
    #  regarding copyright ownership.  The ASF licenses this file
    #  to you under the Apache License, Version 2.0 (the
    #  "License"); you may not use this file except in compliance
    #  with the License.  You may obtain a copy of the License at
    #
    #      http://www.apache.org/licenses/LICENSE-2.0
    #
    #  Unless required by applicable law or agreed to in writing, software
    #  distributed under the License is distributed on an "AS IS" BASIS,
    #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #  See the License for the specific language governing permissions and
    # limitations under the License.
    ################################################################################

    # Allows this configuration to be modified at runtime. The file will be checked every 30 seconds.
    monitorInterval=30

    # This affects logging for both user code and Flink
    rootLogger.level = INFO
    rootLogger.appenderRef.file.ref = MainAppender

    # Uncomment this if you want to _only_ change Flink's logging
    #logger.flink.name = org.apache.flink
    #logger.flink.level = INFO

    # The following lines keep the log level of common libraries/connectors on
    # log level INFO. The root logger does not override this. You have to manually
    # change the log levels here.
    logger.akka.name = akka
    logger.akka.level = INFO
    logger.kafka.name= org.apache.kafka
    logger.kafka.level = INFO
    logger.hadoop.name = org.apache.hadoop
    logger.hadoop.level = INFO
    logger.zookeeper.name = org.apache.zookeeper
    logger.zookeeper.level = INFO
    logger.shaded_zookeeper.name = org.apache.flink.shaded.zookeeper3
    logger.shaded_zookeeper.level = INFO

    # Log all infos in the given file
    appender.main.name = MainAppender
    appender.main.type = RollingFile
    appender.main.append = true
    appender.main.fileName = ${sys:log.file}
    appender.main.filePattern = ${sys:log.file}.%i
    appender.main.layout.type = PatternLayout
    appender.main.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
    appender.main.policies.type = Policies
    appender.main.policies.size.type = SizeBasedTriggeringPolicy
    appender.main.policies.size.size = 100MB
    appender.main.policies.startup.type = OnStartupTriggeringPolicy
    appender.main.strategy.type = DefaultRolloverStrategy
    appender.main.strategy.max = ${env:MAX_LOG_FILE_NUMBER:-10}

    # Suppress the irrelevant (wrong) warnings from the Netty channel handler
    logger.netty.name = org.jboss.netty.channel.DefaultChannelPipeline
    logger.netty.level = OFF
kind: ConfigMap
metadata:
  creationTimestamp: "2022-11-25T07:30:15Z"
  name: my-config
  namespace: default
  resourceVersion: "1036594"
  uid: cb33c5c8-559a-44aa-bcce-95d9153ebff8
